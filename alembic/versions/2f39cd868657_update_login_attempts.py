"""update login attempts

Revision ID: 2f39cd868657
Revises: be0be59d39ec
Create Date: 2025-05-04 18:46:20.168750

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2f39cd868657'
down_revision: Union[str, None] = 'be0be59d39ec'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('employee_id', sa.Integer(), nullable=True),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=500), nullable=False),
    sa.Column('is_locked', sa.Boolean(), nullable=True),
    sa.Column('locked_until', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_index(op.f('ix_users_employee_id'), 'users', ['employee_id'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.drop_index('ix_user_employee_id', table_name='user')
    op.drop_index('ix_user_user_id', table_name='user')
    op.drop_table('user')
    op.drop_constraint('activity_logs_user_id_fkey', 'activity_logs', type_='foreignkey')
    op.create_foreign_key(None, 'activity_logs', 'users', ['user_id'], ['id'])
    op.add_column('login_attempts', sa.Column('failed_attempts', sa.Integer(), nullable=True))
    op.add_column('login_attempts', sa.Column('lockout_until', sa.DateTime(), nullable=True))
    op.alter_column('login_attempts', 'ip_address',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=45),
               existing_nullable=False)
    op.drop_constraint('login_attempts_user_id_fkey', 'login_attempts', type_='foreignkey')
    op.create_foreign_key(None, 'login_attempts', 'users', ['user_id'], ['id'])
    op.drop_constraint('user_roles_user_id_fkey', 'user_roles', type_='foreignkey')
    op.create_foreign_key(None, 'user_roles', 'users', ['user_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'user_roles', type_='foreignkey')
    op.create_foreign_key('user_roles_user_id_fkey', 'user_roles', 'user', ['user_id'], ['user_id'])
    op.drop_constraint(None, 'login_attempts', type_='foreignkey')
    op.create_foreign_key('login_attempts_user_id_fkey', 'login_attempts', 'user', ['user_id'], ['user_id'])
    op.alter_column('login_attempts', 'ip_address',
               existing_type=sa.String(length=45),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_column('login_attempts', 'lockout_until')
    op.drop_column('login_attempts', 'failed_attempts')
    op.drop_constraint(None, 'activity_logs', type_='foreignkey')
    op.create_foreign_key('activity_logs_user_id_fkey', 'activity_logs', 'user', ['user_id'], ['user_id'])
    op.create_table('user',
    sa.Column('user_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('employee_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('username', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('password', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['employee_id'], ['employees.employee_id'], name='user_employee_id_fkey'),
    sa.PrimaryKeyConstraint('user_id', name='user_pkey'),
    sa.UniqueConstraint('email', name='user_email_key'),
    sa.UniqueConstraint('username', name='user_username_key')
    )
    op.create_index('ix_user_user_id', 'user', ['user_id'], unique=False)
    op.create_index('ix_user_employee_id', 'user', ['employee_id'], unique=False)
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_employee_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
